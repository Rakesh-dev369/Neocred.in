version: '3.8'

services:
  # NeoCred Enterprise API
  neocred-api:
    build: .
    container_name: neocred-enterprise-api
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://neocred:neocred123@postgres:5432/neocred
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - neocred-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: neocred-postgres
    environment:
      - POSTGRES_DB=neocred
      - POSTGRES_USER=neocred
      - POSTGRES_PASSWORD=neocred123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - neocred-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neocred"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: neocred-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - neocred-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: neocred-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - neocred-api
    restart: unless-stopped
    networks:
      - neocred-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: neocred-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - neocred-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: neocred-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=neocred123
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - neocred-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  neocred-network:
    driver: bridge